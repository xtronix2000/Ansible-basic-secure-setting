- name: Basic security 
  hosts: test
  become: yes  

  vars:
    ansible_check_mode: True
    base_dir: /home/sexmaior/ansible
    users:
      - user1
      - user2
      - user3
    packages:
      - fail2ban
      - ufw
      - auditd
    sources:
      pwquality_config: "{{ base_dir }}/pam/pwquality.conf"
      auditd_config: "{{ base_dir }}/auditd/auditd.conf"
      auditd_rules: "{{ base_dir }}/auditd/audit.rules"
      vector_config: "{{ base_dir }}/vector/vector.yml"

  tasks:
  # 0. Установка необходимых пакетов безопасности
    - name: Проверка доступности
      ping:

    - name: Установка необходимых пакетов безопасности
      apt:
        pkg: "{{ packages }}"
        state: present 

  # 1. Настройка pwquality
    - name: 1.1 Копирование pwquality.conf
      copy:
        src: "{{ sources.pwquality_config }}"
        dest: /etc/security/pwquality.conf
        mode: '0644'
        backup: yes

    - name: 1.2 Добавление pam_pwquality.so в /etc/pam.d/common-password
      lineinfile:
        path: /etc/pam.d/common-password
        line: "password requisite pam_pwquality.so retry=3"
      notify: Перезапуск PAM

  # 2. Запрет подключения по SSH пользователю root
    - name: 2.1 Бэкап sshd_config
      command: "cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak"

    - name: 2.2 Запрет подключения по SSH пользователю root
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
      notify: Перезапуск SSH

   # 3. Настройка доступа к su только для группы wheel и добавление пользователей в эту группу
    - name: 3.1 Разрешение группы wheel в /etc/pam.d/su
      lineinfile:
        path: /etc/pam.d/su
        regexp: '^auth\s+required\s+pam_wheel.so'
        line: 'auth     required       pam_wheel.so use_uid'

    - name: 3.2 Проверка существования группы wheel
      command: getent group wheel
      register: wheel_group_check
      ignore_errors: true

    - name: 3.3 Создание группы wheel, если она не существует
      command: groupadd wheel
      when: wheel_group_check.rc != 0

    - name: 3.4 Добавление пользователей в группу wheel
      user:
        name: "{{ users }}"
        groups: wheel
        append: yes  # добавить пользователя к существующим группам

   # 4. Ограничение списка пользователей для sudo
    - name: 4.1 Добавить пользователей в группу sudo
      user:
        name: "{{ users }}"
        groups: sudo
        append: yes

    # 5. Установка прав доступа к домашним каталогам
    - name: 5.1 Установка прав доступа к домашним каталогам
      file:
        path: "/home/{{ users }}"
        mode: "0700"
        state: directory
    
    # 6. Настройка UFW для разрешения доступа только по SSH
    - name: 6.1 Включение UFW
      command: ufw enable
    
    - name: 6.2 Разрешение SSH через UFW
      ufw:
        rule: allow
        name: OpenSSH
      notify: Перезапуск UFW
      
    - name: 6.3 Просмотр статуса UFW
      command: ufw status

    # 7. Настройка auditd 
    - name: 7.1 Включение auditd
      service:
        name: auditd
        state: started
        enabled: yes
    
    - name: 7.2 Копирование конфигурации auditd.conf
      copy:
        src: "{{ sources.auditd_config }}"
        dest: /etc/audit/auditd.conf

    - name: 7.3 Копирование правил аудита
      copy:
        src: "{{ sources.auditd_rules }}"
        dest: /etc/audit/rules.d/audit.rules
      notify: Перезапуск auditd

    # 8. Настройка прав доступа к файлам с перечнями пользовательских идентификаторов и групп
    - name: 8.1 Настройка доступа к информации об учетных записях
      file:
        path: /etc/passwd
        mode: "0644"

    - name: 8.2 Настройка доступа к информации о перечнях групп
      file:
        path: /etc/group
        mode: "0644"
    
    - name: 8.3 Настройка доступа к информации о паролях
      file:
        path: /etc/shadow
        mode: "0700"
    
    # 9. Установка прав доступа к системным файлам заданий cron 
    - name: 9.1 Установка прав доступа к системным файлам заданий cron
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        mode: 'go-wx'
      loop:
        - /etc/cron.d/
        - /etc/cron.hourly/
        - /etc/cron.daily/
        - /etc/cron.weekly/
        - /etc/cron.monthly
  
    # 10. Установка корректных прав доступа к стартовым скриптам системы, к каждому файлу в директориях /etc/rc#.d, а также к файлам .service, присутствующим в системе.
    - name: 10.1 Поиск файлов .service в /
      find:
        paths: /
        patterns: "*.service"
        recurse: yes
      register: service_files

    - name: 10.2 Установка прав доступа o-w для файлов .service
      file:
        path: "{{ item.path }}"
        mode: 'o-w'
      with_items: "{{ service_files.files }}"
      #when: item.is_file

    - name: 10.3 Поиск стартовых скриптов в rc#.d
      find:
        paths: "/etc/rc{{ item }}.d"
        patterns: "*" # искать все файлы
        recurse: yes # рекурсивно
      loop: "{{ range(7) | list }}"  # [0, 6]
      register: rc_files # все файлы из путей сохранены тут

    - name: 10.4 Установка прав доступа o-w для найденных стартовых скриптов
      file:
        path: "{{ item.path }}"
        mode: 'o-w'
      with_items: "{{ rc_files.results | map(attribute='files') | flatten | selectattr('is_file') | list }}"
        # rc_files.results - результат выполнения предыдущей задачи
        # map(attribute='files') - из каждого элемента переданного списка (rc_files.results) извлекается атрибут files
        # flatten - схлопывает список списков в один список
        # selectattr('is_file') - получить из общего списка файлов только обычные файлы is_file- True

    # 11. Vector
    - name: 11.1 Добавление репозитория Vector
      command: "bash -c \"$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_vector0.sh)\""

    - name: 11.2 Установка пакета Vector
      apt:
        name: vector
        state: present

    - name: 11.3 Копирование конфигурации Vector
      copy:
        src: "{{ sources.vector_config }}"
        dest: /etc/vector.yml
      notify: Перезапуск Vector
   
    - name: 11.4 Запуск Vector
      command: "vector --config /etc/vector.yml" 
       
  handlers:
  # 1.
    - name: Перезапуск PAM
      systemd:
        name: systemd-logind
        state: restarted
      become: true
        
  # 2.
    - name: Перезапуск SSH
      service:
        name: ssh
        state: restarted
   # 3.
    - name: Перезапуск su service
      service:
        name: su
        state: restarted
    # 6.
    - name: Перезапуск UFW
      service:
        name: ufw
        state: restarted
    # 7.
    - name: Перезапуск auditd
      service:
        name: auditd
        state: restarted
    # 11. 
    - name: Перезапуск Vector
      service:
        name: vector
        state: restarted
